---
import { SectionTitles, SectionBodies, SectionButtons, Img } from '@/shared'
import { SectionLayout, ContainerLayout } from '@/components/layouts'

import PageSectionFieldsModel from '@/models/page-section-fields-model'
import CollectionModel from '@/models/collection-model'
import { getCollection } from '@/api/flux-collection'
import type { ApiOptions } from '@/types/api-types'

// props from astro
const {
  fields,
  sectionCount = 0,
  options = undefined,
  classes = {
    mainDiv: 'grid lg:gap-12 xl:gap-16 2xl:gap-20 lg:grid-cols-2',
    textDiv: 'mt-6 lg:mt-0 lg:col-start-1 lg:row-start-1',
    image: {
      mainDiv: '',
      subDiv: 'z-10 relative',
      class: 'h-full w-auto shadow-md',
      width: '',
      height: ''
    }
  },
  detachedTitle = false,
  dividerSvg = false,
  imageSvgLeft = true,
  imageSvgTopRight = false,
  imageSvgTopLeft = false
} = Astro.props

const fieldsModel = new PageSectionFieldsModel(fields, sectionCount)

// options for default classes and styles
const sectionOptions = options?.sectionOptions ? options.sectionOptions : fieldsModel.sectionOptions
const containerOptions = options?.containerOptions
  ? options.containerOptions
  : fieldsModel.containerOptions
const titleOptions = options?.titleOptions ? options.titleOptions : fieldsModel.titleOptions
const bodyOptions = options?.bodyOptions ? options.bodyOptions : fieldsModel.bodyOptions
const buttonOptions = options?.buttonOptions ? options.buttonOptions : fieldsModel.buttonOptions

// for content collection
let item = null

if (fields.contentCollection) {
  const options: ApiOptions = {
    id: fields.contentCollection,
    model: CollectionModel,
    fields: 'id,parentId,name,type,items{id,parentId,name,fields,file}',
    loadChildCollections: true
  }

  const { items } = await getCollection(options)
  item = items[0]
}
---

<SectionLayout sectionOptions={sectionOptions}>
  <ContainerLayout containerOptions={containerOptions}>
    {
      detachedTitle && (
        <SectionTitles fields={fieldsModel} titleOptions={titleOptions} divClass="relative z-1" />
      )
    }

    <div class={`${detachedTitle ? 'items-start' : 'items-center'} ${classes.mainDiv} z-10`}>
      <div class={classes.image.mainDiv}>
        {
          fieldsModel.videoUrl && (
            <div class="relative">
              <figure class="aspect-h-9 aspect-w-16 relative z-1 z-10 overflow-hidden">
                <iframe
                  class="h-full w-full object-cover object-center"
                  src={fieldsModel.videoUrl}
                  allowfullscreen
                />
              </figure>

              {imageSvgLeft && (
                <div class="absolute -left-48 top-48">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173960/shape-4.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}

              {imageSvgTopRight && (
                <div class="absolute -right-48 -top-32 hidden opacity-50 sm:block">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173961/shape-5.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}

              {imageSvgTopLeft && (
                <div class="absolute -left-52 -top-48">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173960/shape-4.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}
            </div>
          )
        }
        {
          fieldsModel.image && !fieldsModel.video && (
            <div class="relative">
              <figure class={classes.image.subDiv}>
                <Img
                  image={fieldsModel.image}
                  imageClass={classes.image.class}
                  width={classes.image.width}
                  height={classes.image.height}
                />
              </figure>

              {imageSvgLeft && (
                <div class="absolute -left-48 top-48">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173960/shape-4.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}

              {imageSvgTopRight && (
                <div class="absolute -right-48 -top-32 hidden opacity-50 sm:block">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173961/shape-5.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}

              {imageSvgTopLeft && (
                <div class="absolute -left-52 -top-48">
                  <img
                    src="https://fluxconsole.com/files/item/1334/173960/shape-4.png"
                    alt="britt hill"
                    height={500}
                    width={500}
                    class="w-full"
                  />
                </div>
              )}
            </div>
          )
        }
      </div>

      <div class={`relative ${classes.textDiv} z-10`}>
        {
          fieldsModel.backgroundImage && (
            <div class="hidden lg:block">
              <figure class="mb-8">
                <Img image={fields.backgroundImage} imageClass="mx-auto w-56 object-center" />
              </figure>
            </div>
          )
        }

        {!detachedTitle && <SectionTitles fields={fieldsModel} titleOptions={titleOptions} />}

        <SectionBodies fields={fieldsModel} bodyOptions={bodyOptions} />

        {
          item && (
            <div class="mt-2">
              <span class="block text-lg font-medium uppercase tracking-wide text-primary-400">
                Hours
              </span>
              <div class="mt-1 text-gray-600" set:html={item.fields.hours} />
            </div>
          )
        }

        <SectionButtons
          fields={fieldsModel}
          buttonOptions={buttonOptions}
          divClass="mt-8 flex space-y-2"
        />
      </div>
    </div>
  </ContainerLayout>

  {
    dividerSvg && (
      <div class="absolute inset-x-0 bottom-0 z-1">
        <img
          src="https://fluxconsole.com/files/item/1334/173950/divider-1.svg"
          alt="britt hill"
          height={500}
          width={500}
          class="w-full"
        />
      </div>
    )
  }
</SectionLayout>
